{"version":3,"sources":["logo.svg","components/Navbar.js","components/Text.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","logo","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","role","onClick","toggleMode","htmlfor","mode2","Text","useState","text","setText","heading","split","length","rows","value","onChange","event","target","newText","toUpperCase","toLowerCase","clear","style","marginTop","border","defaultProps","Alert","alert","msg","data-bs-dismiss","App","setmode","setMode2","setalert","showAlert","message","document","body","backgroundColor","querySelector","color","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b3bb5e08.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.logo}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">{props.about}</a>\r\n              </li>\r\n            </ul>\r\n            <div className=\"form-check form-switch\">\r\n              <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n              <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlfor=\"flexSwitchCheckDefault\">{props.mode2}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  logo: PropTypes.string,\r\n  about: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n  logo: \"Word Counter\",\r\n  about: \"About Us\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Text(props) {\r\n    const [text , setText] = useState('Developed By Adil Nawaz ðŸ‘‹')\r\n\r\n    function handleToUppercase(){\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    function handleTolowercase(){\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n    function handleToclear(){\r\n        let newText = ' ';\r\n        setText(newText);\r\n    }\r\n    function handleTochange(event){\r\n        setText(event.target.value);\r\n    }\r\n    let ansStyle={\r\n        marginTop: '20px',\r\n        border: '2px solid grey'\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n<div className=\"container my-12\">\r\n    <h2 className=\"flex text-center py-8 font-weight-bold\">{props.heading} âœŒ</h2>\r\n   <p className=\"flex text-center font-weight-light\">{text.split(\" \").length} word and {text.length} Charcater here</p>\r\n   <p className={`flex text-center text-${props.mode==='light'?'dark':'light'}`}>{0.008 * text.split(\" \").length}  Minutes to read this characters</p>\r\n</div>\r\n<div className=\"container\">\r\n    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" value={text} onChange={handleTochange} ></textarea>\r\n    <button className=\"btn btn-primary\" onClick={handleToUppercase}>Change To Uppercase</button>\r\n    <button className=\"btn btn-danger\" onClick={handleTolowercase}>Change To Lowercase</button>\r\n    <button className=\"btn btn-secondary\" onClick={handleToclear}>{props.clear}</button>\r\n</div>\r\n<div className=\"container\">\r\n<h2 className=\"flex text-center \" id=\"prev\">Preview</h2>\r\n<p id=\"ans\" style={ansStyle}>{text}</p>\r\n</div>\r\n</div>\r\n    );\r\n}\r\nText.propTypes={\r\n    heading:PropTypes.string.isRequired,\r\n    clear:PropTypes.string.isRequired\r\n}\r\nText.defaultProps={\r\n    clear:\"Clear Text\"\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Text from './components/Text';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n let [mode2, setMode2] = useState(\"Enable dark mode\")\n const [alert, setalert] = useState(null);\n function showAlert(message , type){\n   setalert({\n     msg:message,\n     type:type\n   })\n }\n\n\nfunction toggleMode(){\n  if(mode=='light'){\n    setmode(\n      'dark',\n      document.body.style.backgroundColor='#202025',\n      document.querySelector('h2').style.color='white',\n      document.querySelector('p').style.color='white',\n      document.getElementById('prev').style.color='white',\n      document.getElementById('ans').style.color='white',\n    showAlert(\"Dark mode has been enable\",\"success\"),\n    \n    \n    )\n    setMode2(\"Enable light mode\")\n  }else{\n    setmode(\n      'light',\n      document.body.style.backgroundColor='whitesmoke',\n      document.querySelector('h2').style.color='black',\n      document.querySelector('p').style.color='black',\n      document.getElementById('prev').style.color='black',\n      document.getElementById('ans').style.color='black',\n      showAlert(\"light mode has been enable\",\"success\")\n    )\n\n    setMode2(\"Enable dark mode\")\n  }\n}\n\n\n  return (\n\n<>\n  <Navbar mode={mode} toggleMode={toggleMode} mode2={mode2}/>\n  <Alert alert={alert}/>\n  <Text heading=\"Words Here\"/>\n</>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}